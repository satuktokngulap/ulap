#!/bin/bash

# RAMBO v0.1 - RAM Burst Operator
# This script polls the VM RAM usage using snmpwalk
# and adjusts the RAM allocation using 'virsh setmem' depending
# on the needs of the VM
# Author: Belay Montes

LOG="logger $1:"
# Name of VM is passed as an argument
VMNAME=$1

# Tuneable variables
POLL_INT=5	 # poll interval
REACT=6	  	 # if memory is beyond threshold for (POLL_INT * REACT), memory is adjusted
UTHRESH=60	 # Upper memory threshold
LTHRESH=30	 # Lower memory threshold
INCREMENT=1048576	# Increment of memory increase

# Memory variables
CURMEM=0	 # VM current memory usage, obtained using snmpwalk
MEMAVAIL=0	 # Available memory 
MEMPERC=0	 # Percent memory

FILEDIR="/root/scripts/"
echo 1 > ${FILEDIR}${VMNAME}_monitor

i=$(($( cat ${FILEDIR}${VMNAME}_monitor ))) # File $VMNAME_monitor contains either 1 or 0. 1 indicates monitoring should continue
alert=0
low=0

case $VMNAME in
        a_vm_rdpminta)
                BASEMEM=4194304
		IP_ADDR="10.18.221.24"
        ;;
	b_vm_rdpmintb)
                BASEMEM=4194304
		IP_ADDR="10.18.221.25"
	;;
        b_vm_lms)
                BASEMEM=524288
		IP_ADDR="10.18.221.21"
        ;;
        a_vm_ldap)
                BASEMEM=524288
		IP_ADDR="10.18.221.20"
        ;;
        a_vm_rdpa)
                BASEMEM=4194304
		IP_ADDR="10.18.221.22"
	;;
        b_vm_rdpb)
                BASEMEM=4194304
		IP_ADDR="10.18.221.23"
	;;
        *)
                BASEMEM=4194304
		IP_ADDR="10.18.221.24"
        ;;
esac

#Get current memory allocation
MEMALLOC=$(( $(virsh dommemstat $VMNAME | gawk '/actual/ {print $2}') ))
MAXMEM=$(( $(virsh dominfo $VMNAME | gawk '/^Max memory/ { print $3 }') ))

$LOG "RAMBO started for $VMNAME"
$LOG "Current total memory: ${MEMALLOC} KiB"

while [ $i -eq 1 ]; do
        sleep $POLL_INT #Poll interval
        MEMALLOC=$(( $(virsh dommemstat $VMNAME | gawk '/actual/ {print $2}') ))
	MEMAVAIL=$(( $(snmpwalk -Os -c CLOUDTOPT3 -v 1 $IP_ADDR memAvailReal | gawk '{print $4}') ))
        CURMEM=$(( $MEMALLOC - $MEMAVAIL ))
        MEMPERC=$(( $CURMEM*100 / $MEMALLOC ))
        echo "Usage: ${CURMEM} KiB ($MEMPERC%)"
	if [ $MEMPERC -lt $UTHRESH ] && [ $MEMPERC -gt $LTHRESH ]; then
		low=0;
		alert=0;
	else
	        if [ $MEMPERC -ge $UTHRESH ]; then
        	        let alert++;
			low=0;
	                if [ $alert -gt $REACT ] && [ $MEMALLOC -lt $MAXMEM ]; then
	                        $LOG "Mem usage greater than $UTHRESH% for $(($POLL_INT*$alert)) sec"
	                        NEWMEM=$(( $MEMALLOC + $INCREMENT ))
	                        if [ $NEWMEM -gt $MAXMEM ]; then
	                                $LOG "Using max memory"
	                                NEWMEM=$MAXMEM;
	                        fi
	                        $LOG "Will increase memory to $NEWMEM"
	                        virsh setmem $VMNAME $(( $MEMALLOC + $INCREMENT ))
	                        sleep $POLL_INT
	                        MEMALLOC=$(( $(virsh dommemstat $VMNAME | gawk '/actual/ {print $2}') ))
	                        $LOG "Current memory: ${MEMALLOC} KiB"
	                        alert=0;
	                fi
	        else
	                if [ $MEMPERC -le $LTHRESH ]; then
	                        let low++;
				alert=0;
	                        if [ $low -gt $REACT ] && [ $MEMALLOC -gt $BASEMEM ]; then
	                                $LOG "Mem usage is below $LTHRESH% for $(($POLL_INT*$low)) sec"
	                                $LOG "Will revert back to $BASEMEM"
	                                virsh setmem $VMNAME $BASEMEM
	                                sleep $POLL_INT
	                                MEMALLOC=$(( $(virsh dommemstat $VMNAME | gawk '/actual/ {print $2}') ))
	                                $LOG "Current memory: ${MEMALLOC} KiB"
	                                low=0;
	                        fi
	                fi
		fi
        fi
       i=$(($( cat ${FILEDIR}${VMNAME}_monitor )))
done
$LOG "VM service is stopped or is stopping"
virsh setmem $VMNAME $BASEMEM
MEMALLOC=$(( $(virsh dommemstat $VMNAME | gawk '/actual/ {print $2}') ))

exit 0
